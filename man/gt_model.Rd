% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_model.R
\name{gt_model}
\alias{gt_model}
\title{Generates a table from model results using the \code{gt} library.}
\usage{
gt_model(
  models,
  digits = 3,
  sig_thresh = 0.05,
  summary_stats = NULL,
  var_labels = c(nobs = "N"),
  parenthetical_value = "std.error",
  parenthesis_type = "regular",
  beside = FALSE,
  groups = NULL,
  omit_var = NULL,
  fn_transform = NULL,
  fn_estimate = NULL,
  fn_summary = NULL
)
}
\arguments{
\item{models}{a \code{list} of models, of either the \code{lm} or \code{glm} command.}

\item{digits}{a numeric value indicating the number of decimals to use when rounding numbers.}

\item{sig_thresh}{a numeric value indicating the threshold for statistical significance
for the asterisk. If NULL, asterisks will not be printed.}

\item{summary_stats}{a character vector indicating desired summary statistics. The names
should match summary statistic names produced through \link[broom:reexports]{broom::glance}
when applied to a model of this type. The number of observations
will always be reported.}

\item{var_labels}{a named character vector indicating labels for the rows. Names should
be the actual variable names in the R model output for variables or
summary statistic names from \link[broom:reexports]{broom::glance} for summary statistics.}

\item{parenthetical_value}{A character string of either "std.error", "statistic" (e.g. test statistic),
or "p.value" indicating what to include in parenthesis.
Defaults to standard errors.}

\item{parenthesis_type}{A character string of either "regular", "square", or "curly" indicating
the type of parenthesis to use for parenthetical values.}

\item{beside}{A logical indicating whether to show the parenthetical value
on the same row (TRUE) or a separate row (FALSE; default).}

\item{groups}{A character vector indicating the factor name for variables that
should be grouped together under a heading row (e.g. for categorical
variables).}

\item{omit_var}{A character vector indicating variable names for variables that should
be omitted from the final model.}

\item{fn_transform}{A function (e.g. \code{exp}) that will be used to transform the coefficients
for the model}

\item{fn_estimate}{A user-supplied custom function to extract variable-specific
estimates from the supplied model object. This can be useful if
the model has no existing method in \link{broom}. The returned object
should be a \link{tibble} of the same type as returned from \link[broom:reexports]{broom::tidy}. Each
row should be for a given independent variables and the column names
\code{term} (for variable name), \code{estimate} (for coefficient value),
\code{std.error}, \code{statistic} (for test statistic), and \code{p.value}.}

\item{fn_summary}{A user-supplied custom function to extract additional summary
statistics from the supplied model object. These additional summary
statistics can then be added via the \code{summary_stats} argument. This
can be useful to add custom summary statistics not available in
\link[broom:reexports]{broom::glance} or if no existing method exists in \link{broom} for this type
of model object. The
returned object should be a \link{tibble} of the same type as returned
from \link[broom:reexports]{broom::glance}. It should have only one row, and any desired
summary statistics should be included as variables. In many cases,
the output from \link[broom:reexports]{broom::glance} can be augmented in this function
with additional information. See below for an example of
this approach for pseudo-R-squared in a logit model.}
}
\value{
\code{gt_model} returns a \code{gt_tbl} object that can be further processed using
various commands from the \link{gt} package.
}
\description{
\code{gt_model} outputs a list of models as a \link{gt} table for display in Quarto,
R Markdown, or other formats.
}
\details{
This function can be used to create a \link{gt} table of model (i.e. regression) results
using a format common in many scientific fields. Multiple models can be included in the table
by feeding in a list of model objects. The most common intended use of this function is within
a Quarto document where the output will be displayed nicely in the final output.

Model output is extracted via the \href{https://broom.tidymodels.org/index.html}{broom}
package. You can see a full list of models with methods available in \code{broom}
\href{https://broom.tidymodels.org/articles/available-methods.html}{here}. Some complex model
types that don't return other elements besides basic estimates, standard errors, etc. may
not work correctly.

For model classes without corresponding \link{broom} methods, the user may use the
\code{fn_estimate} and \code{fn_summary} arguments to supply custom functions that extract
this information from the model object in a manner analogous to \link[broom:reexports]{broom::tidy} and
\link[broom:reexports]{broom::glance}, respectively.

Because the returned object is a \code{gt_tbl}, it can be further refined to the user's
tastes by piping it into subsequent \link{gt} commands.

The returned table uses a "stub" column for the variable and summary statistics labels. All
model columns will be named as \code{modelX} where X is the index of the model (e.g. model1, model2).
Users can rename the models with a \code{cols_label} command. Variables and summary statistics
can be renamed by the \code{var_labels} argument which takes a named character vector that
provides the correspondence between original and new variable names (see examples below).

All rows have a label prefix that can be used to identify sets of rows or particular rows.
Each row label begins with either "coef:", "par:", "summary:", or "grp:" depending on whether it is
a model coefficient, parenthetical value, summary statistic, or variable group row, respectively. This is followed by either the
name of the variable in R or the name of the summary statistic. These labels will still apply
even if the \code{var_labels} argument has been used for different labeling in the printed table.
User can use this to access specific rows or types of rows. For example, to change the
rounding on all coefficient values:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{ gt_model(...) |>
   fmt_number(rows=matches("^coef:"), decimals=5)
}\if{html}{\out{</div>}}
}
\examples{
if (require("gt")) {

# Linear model output -----------------------------------------------------
  model1 <- lm(mpg ~ hp, data = mtcars)
  model2 <- update(model1, . ~ . + disp + wt)
  model3 <- update(model2, . ~ . + as.factor(cyl))

  name_corr <- c("(Intercept)" = "Constant",
                 "hp" = "Horsepower",
                 "disp" = "Displacement (cu. in.)",
                 "wt" = "Weight (1000 lbs)",
                 "as.factor(cyl)" = "Number of cylinders (ref. 4-cylinder)",
                 "as.factor(cyl)6" = "6-cylinder",
                 "as.factor(cyl)8" = "8-cylinder",
                 "nobs" = "N",
                 "r.squared" = "R-squared",
                 "BIC" = "BIC")

  gt_model(list(model1, model2, model3), var_labels = name_corr,
           summary_stats = c("r.squared", "BIC"),
           groups=c("as.factor(cyl)")) |>
    cols_label(model1 = "(1)", model2 = "(2)", model3 = "(3)") |>
    fmt_number(rows = c("summary:BIC"), decimals = 1) |>
    tab_source_note(md("*Notes:* Standard errors shown in parenthesis.")) |>
    tab_options(table.width = "100\%")

# Custom summary for logit model -------------------------------------------
  model1 <- glm(case ~ spontaneous+induced, data = infert,
                family = binomial())
  model2 <- update(model1, .~.+age+parity)
  model3 <- update(model2, .~.+education)

  name_corr <- c("(Intercept)" = "Intercept",
                 "spontaneous" = "Prior spontaneous abortions",
                 "induced" = "Prior induced abortions",
                 "age" = "Age",
                 "parity" = "Parity",
                 "education" = "Education (ref. less than 6 years)",
                 "education6-11yrs" = "6-11 years",
                 "education12+ yrs" = "12 or more years",
                 "nobs" = "N",
                 "deviance" = "Deviance",
                 "pseudo.rsquared" = "Pseudo R-squared")

  get_summary_logit <- function(model) {
    broom::glance(model) |>
      dplyr::mutate(pseudo.rsquared = (null.deviance - deviance)/null.deviance)
  }

  gt_model(list(model1, model2, model3),
           var_labels = name_corr,
           groups = "education",
           fn_summary = get_summary_logit,
           summary_stats = c("deviance", "pseudo.rsquared")) |>
    cols_label(model1 = "(1)", model2 = "(2)", model3 = "(3)") |>
    fmt_number(rows = "summary:deviance", decimals = 1) |>
    tab_source_note(md("*Notes:* Standard errors shown in parenthesis."))
}
}
